// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Word {
  id              Int              @id @default(autoincrement())
  swissGerman     String
  german          String?
  spellings       String[]
  dialect         Dialect
  interpretations Interpretation[]
  audioSamplePath String?
  createdAt       DateTime         @default(now())
  createdBy       User             @relation(fields: [createdByUserId], references: [id])
  createdByUserId Int
}

model Interpretation {
  id              Int       @id @default(autoincrement())
  word            Word      @relation(fields: [wordId], references: [id])
  wordId          Int
  meanings        Meaning[]
  upvotes         User[]    @relation("InterpretationUpvotes")
  downvotes       User[]    @relation("InterpretationDownvotes")
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  createdBy       User      @relation(fields: [createdByUserId], references: [id])
  createdByUserId Int
}

model Meaning {
  id               Int            @id @default(autoincrement())
  interpretation   Interpretation @relation(fields: [interpretationId], references: [id])
  interpretationId Int
  explanation      String
  examples         String[]
}

model User {
  id                       Int              @id @default(autoincrement())
  username                 String           @unique
  email                    String           @unique
  verified                 Boolean          @default(false)
  preferredDialect         Dialect          @default(OTHER)
  createdWords             Word[]
  createdInterpretations   Interpretation[]
  upvotedInterpretations   Interpretation[] @relation("InterpretationUpvotes")
  downvotedInterpretations Interpretation[] @relation("InterpretationDownvotes")
  password                 String
  sessions                 Session[]
  lastForgotPasswordAt     DateTime?
  lastPasswordResetAt      DateTime?
}

model Session {
  token     String   @id
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
}

// Source: https://als.wikipedia.org/wiki/Schweizerdeutsch
enum Dialect {
  BASEL
  // BASELBIETER
  AARGAU
  BERN
  // BERNER_OBERLAND
  LUZERN
  OSTSCHWEIZ
  SOLOTHURN
  ZUERICH
  GLARUS
  FREIBURG
  URI
  WALLIS
  OTHER
}
